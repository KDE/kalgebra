# SPDX-FileCopyrightText: 2021 Laurent Montel <montel@kde.org>
# SPDX-License-Identifier: CC0-1.0

include:
  - project: sysadmin/ci-utilities
    file:
      - /gitlab-templates/linux.yml
      - /gitlab-templates/freebsd.yml
      - /gitlab-templates/linux-qt6.yml
      - /gitlab-templates/freebsd-qt6.yml
      - /gitlab-templates/craft-android-arm32.yml
      - /gitlab-templates/craft-android-arm64.yml
      - /gitlab-templates/craft-android-x86-64.yml
      - /gitlab-templates/craft-android-appbundle.yml

craft_android_arm32:
  needs: []

craft_android_arm64:
  needs: []
  script:
    # Set up craft settings and blueprint settings
    - craftmaster --setup
    # Get Craft itself ready
    - craftmaster -c -i craft
    # Install all of our dependencies
    - craftmaster -c --install-deps $CI_PROJECT_NAME
    # Build the actual application
    - craftmaster -c --no-cache --target master --src-dir $CI_PROJECT_DIR/src/ $CI_PROJECT_NAME
    # Package it up!
    - craftmaster -c --package --target master --src-dir $CI_PROJECT_DIR/src/ $CI_PROJECT_NAME
    # Save our package
    - packageDir=$(craftmaster -c -q --get "packageDestinationDir()" virtual/base)
    - mkdir $CI_PROJECT_DIR/.kde-ci-packages/
    - cp -vrf $packageDir/*.apk $packageDir/metadata/*.zip $CI_PROJECT_DIR/.kde-ci-packages/
    # Archive the artifacts we need for creating an application bundle
    - cd $CI_PROJECT_DIR
    # Get the relative path of the build directory
    - buildDir=$(craftmaster -c -q --get "buildDir()" --target master --src-dir $CI_PROJECT_DIR/src/ $CI_PROJECT_NAME)
    - buildDir=${buildDir#$(pwd)/}
    # Get the Android target (we assume a single target)
    - androidTarget=$(craftmaster -c -q --get "androidApkTargets" --target master --src-dir $CI_PROJECT_DIR/src/ $CI_PROJECT_NAME | cut -d "'" -f 2)
    - buildApkDir=${buildDir}/${androidTarget}_build_apk
    - mkdir app-bundle-artifacts
    # Archive the architecture-independent artifacts only for android-arm64-clang
    - ls -la ${buildDir}
    - ls -la ${buildApkDir}
    - if [ ${KDECI_CRAFT_PLATFORM} = "android-arm64-clang" ]; then tar --ignore-failed-read -czf app-bundle-artifacts/common.tar.gz ${KDECI_CRAFT_PLATFORM}/src/android/java ${buildDir}/*.gradle ${buildApkDir}/{AndroidManifest.xml,assets,build.gradle,gradle,gradle.properties,gradlew,local.properties,res,src}; fi
    # Archive the architecture-specific artifacts (relative to the build_apk directory)
    - (cd ${buildApkDir} && tar czf ${CI_PROJECT_DIR}/app-bundle-artifacts/${KDECI_CRAFT_PLATFORM}.tar.gz libs)
    # Remember the build_apk path for subsequent jobs
    - echo "${CI_PROJECT_DIR}/${buildApkDir}" >app-bundle-artifacts/build-apk-path-${KDECI_CRAFT_PLATFORM}

craft_android_x86_64:
  needs: []
